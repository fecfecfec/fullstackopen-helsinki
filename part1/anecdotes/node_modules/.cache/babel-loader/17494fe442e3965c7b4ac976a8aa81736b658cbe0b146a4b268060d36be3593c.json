{"ast":null,"code":"var _jsxFileName = \"/Users/franciscoferreiro/Develop/fullstackopen-helsinki/part1/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 43\n}, this);\n_c = Button;\nconst Display = ({\n  text,\n  value\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [text, \": \", value]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 38\n}, this);\n_c2 = Display;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  // const rateGood = () => setGood(good + 1)\n  const rateGood = () => {\n    console.log('Good value before', good);\n    setGood(good + 1);\n  };\n  const rateNeutral = () => setNeutral(neutral - 1);\n  const rateBad = () => setBad(bad + 1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: rateGood,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      value: good,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Display\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","handleClick","text","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Display","value","_c2","App","_s","good","setGood","neutral","setNeutral","bad","setBad","rateGood","console","log","rateNeutral","rateBad","_c3","$RefreshReg$"],"sources":["/Users/franciscoferreiro/Develop/fullstackopen-helsinki/part1/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ handleClick, text }) => <button onClick={handleClick}>{text}</button>\nconst Display = ({ text, value }) => <div>{text}: {value}</div>\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  // const rateGood = () => setGood(good + 1)\n  const rateGood = () => { \n    console.log('Good value before', good)\n    setGood(good + 1)\n  }\n  const rateNeutral = () => setNeutral(neutral - 1)\n  const rateBad = () => setBad(bad + 1)\n\n\n  return (\n    <>\n      <h1>Give Feedback</h1>\n      <Button \n        handleClick={rateGood}\n        text='Good'\n      />\n      <h1>Statistics</h1>\n      <Display \n        value={good}\n        text='Good'\n        />\n    </>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAK,CAAC,kBAAKL,OAAA;EAAQM,OAAO,EAAEF,WAAY;EAAAG,QAAA,EAAEF;AAAI;EAAAG,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAS,CAAC;AAAAC,EAAA,GAAjFT,MAAM;AACZ,MAAMU,OAAO,GAAGA,CAAC;EAAER,IAAI;EAAES;AAAM,CAAC,kBAAKd,OAAA;EAAAO,QAAA,GAAMF,IAAI,EAAC,IAAE,EAACS,KAAK;AAAA;EAAAN,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAM,CAAC;AAAAI,GAAA,GAAzDF,OAAO;AAEb,MAAMG,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACwB,GAAG,EAAEC,MAAM,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;;EAEjC;EACA,MAAM0B,QAAQ,GAAGA,CAAA,KAAM;IACrBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAER,IAAI,CAAC;IACtCC,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;EACnB,CAAC;EACD,MAAMS,WAAW,GAAGA,CAAA,KAAMN,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;EACjD,MAAMQ,OAAO,GAAGA,CAAA,KAAML,MAAM,CAACD,GAAG,GAAG,CAAC,CAAC;EAGrC,oBACEtB,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBX,OAAA,CAACG,MAAM;MACLC,WAAW,EAAEoB,QAAS;MACtBnB,IAAI,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACFX,OAAA;MAAAO,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBX,OAAA,CAACa,OAAO;MACNC,KAAK,EAAEI,IAAK;MACZb,IAAI,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA,eACJ,CAAC;AAEP,CAAC;AAAAM,EAAA,CA7BKD,GAAG;AAAAa,GAAA,GAAHb,GAAG;AA+BT,eAAeA,GAAG;AAAA,IAAAJ,EAAA,EAAAG,GAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAf,GAAA;AAAAe,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}