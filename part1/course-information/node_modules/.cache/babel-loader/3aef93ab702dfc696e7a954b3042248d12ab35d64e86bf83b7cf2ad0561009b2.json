{"ast":null,"code":"var _jsxFileName = \"/Users/franciscoferreiro/Develop/fullstackopen-helsinki/part1/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 43\n}, this);\n_c = Button;\nconst Display = ({\n  text,\n  value\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [text, \": \", value]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 38\n}, this);\n_c2 = Display;\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  const total = good + neutral + bad;\n  const average = (good - bad) / total;\n  const positive = good / total * 100;\n  if (total === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      text: \"Good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"Neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"Bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"All\",\n      value: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"Average\",\n      value: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"Positive\",\n      value: positive + '%'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c3 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const rateGood = () => setGood(good + 1);\n  // const rateGood = () => {\n  //   console.log('Good value before', good)\n  //   setGood(good + 1)\n  // }\n  // const rateNeutral = () => {\n  //   console.log('Neutral value before', neutral)\n  //   setNeutral(neutral + 1)\n  // }\n  // const rateBad = () => {\n  //   console.log('Bad value before', bad)\n  //   setBad(bad + 1)\n  // }\n  const rateNeutral = () => setNeutral(neutral + 1);\n  const rateBad = () => setBad(bad + 1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: rateGood,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: rateNeutral,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: rateBad,\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Display\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","handleClick","text","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Display","value","_c2","Statistics","good","neutral","bad","total","average","positive","_c3","App","_s","setGood","setNeutral","setBad","rateGood","rateNeutral","rateBad","_c4","$RefreshReg$"],"sources":["/Users/franciscoferreiro/Develop/fullstackopen-helsinki/part1/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ handleClick, text }) => <button onClick={handleClick}>{text}</button>\nconst Display = ({ text, value }) => <div>{text}: {value}</div>\nconst Statistics = ({ good, neutral, bad }) => {\n  const total = good + neutral + bad\n  const average = (good - bad) / total\n  const positive = good / total * 100\n  if (total === 0) {\n    return (\n      <div>No feedback given</div>\n    )\n  }\n  return (\n    <>\n      <Display\n        text='Good'\n        value={good}\n      />\n      <Display\n        text='Neutral'\n        value={neutral}\n      />\n      <Display\n        text='Bad'\n        value={bad}\n      />\n      <Display\n        text='All'\n        value={total}\n      />\n      <Display\n        text='Average'\n        value={average}\n      />\n      <Display\n        text='Positive'\n        value={positive + '%'}\n      />\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const rateGood = () => setGood(good + 1)\n  // const rateGood = () => {\n  //   console.log('Good value before', good)\n  //   setGood(good + 1)\n  // }\n  // const rateNeutral = () => {\n  //   console.log('Neutral value before', neutral)\n  //   setNeutral(neutral + 1)\n  // }\n  // const rateBad = () => {\n  //   console.log('Bad value before', bad)\n  //   setBad(bad + 1)\n  // }\n  const rateNeutral = () => setNeutral(neutral + 1)\n  const rateBad = () => setBad(bad + 1)\n\n\n  return (\n    <>\n      <h1>Give Feedback</h1>\n      <Button\n        handleClick={rateGood}\n        text='Good'\n      />\n      <Button\n        handleClick={rateNeutral}\n        text='Neutral'\n      />\n      <Button\n        handleClick={rateBad}\n        text='Bad'\n      />\n      <h1>Statistics</h1>\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n      />\n    </>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}